# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: DEPLOY DEMO

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Prepare
        run: |
          set -e

          cp .env.example .env

          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          cat > ~/.ssh/known_hosts << ENDOFFILE
          |1|64wtn+Hc01gnRV6/eyw0FYXtZrc=|2+vpvkhlHGqjhS+SJem1HOAC970= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEWjpGnBDFfbqkp5Q1mEMf2QztT2dKk6oaosnuNqia6ZMcGCNuVCRo3iRuWXhcFEMgjbPeq2W1rx+VxjJJQSZxg=
          |1|oG0GC5p7+hY+Q3PSz8F3mKKUp9c=|jjbidF6CfU0wBqCIlURlBis7Huk= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEWjpGnBDFfbqkp5Q1mEMf2QztT2dKk6oaosnuNqia6ZMcGCNuVCRo3iRuWXhcFEMgjbPeq2W1rx+VxjJJQSZxg=
          ENDOFFILE
          chmod 700 ~/.ssh/
          chmod 600 ~/.ssh/id_rsa

          apt install -y pv
      - name: Docker build
        run: |
          bash ./bin/warm-docker-cache
          docker-compose build
      - name: Deploy image
        run: |
          docker save apps:${DOCKER_COMPOSE_APP_IMAGE_TAG} | bzip2 | pv | ssh root@dok.8iq.dev 'bunzip2 | docker load'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_DOCK_SERVER_PRIVATE_KEY }}
