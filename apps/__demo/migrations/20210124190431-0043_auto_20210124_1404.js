// auto generated by kmigrator
// KMIGRATOR:0043_auto_20210124_1404:

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create model group
--
CREATE TABLE "Group" ("id" serial NOT NULL PRIMARY KEY, "name" text NOT NULL UNIQUE);
--
-- Create model schematype
--
CREATE TABLE "SchemaType" ("id" serial NOT NULL PRIMARY KEY, "codename" text NOT NULL UNIQUE);
--
-- Alter field avatar on organization
--
--
-- Alter field createdAt on test
--
CREATE INDEX "Test_createdAt_febd0326" ON "Test" ("createdAt");
--
-- Alter field file on test
--
--
-- Alter field meta on test
--
--
-- Alter field settings on test
--
--
-- Alter field updatedAt on test
--
CREATE INDEX "Test_updatedAt_1072d8fc" ON "Test" ("updatedAt");
--
-- Alter field venue on test
--
--
-- Alter field file on testhistoryrecord
--
--
-- Alter field meta on testhistoryrecord
--
--
-- Alter field settings on testhistoryrecord
--
--
-- Alter field venue on testhistoryrecord
--
--
-- Alter field vir1 on testhistoryrecord
--
--
-- Alter field createdAt on testitem
--
CREATE INDEX "TestItem_createdAt_8999fc86" ON "TestItem" ("createdAt");
--
-- Alter field meta on testitem
--
--
-- Alter field updatedAt on testitem
--
CREATE INDEX "TestItem_updatedAt_f028fe01" ON "TestItem" ("updatedAt");
--
-- Alter field meta on testitemhistoryrecord
--
--
-- Alter field createdAt on testsoftdeletedobj
--
CREATE INDEX "TestSoftDeletedObj_createdAt_2cbf10d1" ON "TestSoftDeletedObj" ("createdAt");
--
-- Alter field meta on testsoftdeletedobj
--
--
-- Alter field updatedAt on testsoftdeletedobj
--
CREATE INDEX "TestSoftDeletedObj_updatedAt_ce501eb9" ON "TestSoftDeletedObj" ("updatedAt");
--
-- Alter field meta on testsoftdeletedobjhistoryrecord
--
--
-- Alter field newId on testsoftdeletedobjhistoryrecord
--
--
-- Alter field avatar on user
--
--
-- Alter field meta on user
--
--
-- Alter field settings on user
--
--
-- Create model permission
--
CREATE TABLE "Permission" ("id" serial NOT NULL PRIMARY KEY, "codename" text NOT NULL UNIQUE, "schema" integer NOT NULL);
--
-- Create model group_permissions_many
--
CREATE TABLE "Group_permissions_many" ("id" serial NOT NULL PRIMARY KEY, "Group_left_id" integer NOT NULL, "Permission_right_id" integer NOT NULL);
CREATE INDEX "Group_name_b2d970e0_like" ON "Group" ("name" text_pattern_ops);
CREATE INDEX "SchemaType_codename_2a0ab21d_like" ON "SchemaType" ("codename" text_pattern_ops);
ALTER TABLE "Permission" ADD CONSTRAINT "Permission_schema_a372da1f_fk_SchemaType_id" FOREIGN KEY ("schema") REFERENCES "SchemaType" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "Permission_codename_742915f9_like" ON "Permission" ("codename" text_pattern_ops);
CREATE INDEX "Permission_schema_a372da1f" ON "Permission" ("schema");
ALTER TABLE "Group_permissions_many" ADD CONSTRAINT "Group_permissions_many_Group_left_id_f39cabb2_fk_Group_id" FOREIGN KEY ("Group_left_id") REFERENCES "Group" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Group_permissions_many" ADD CONSTRAINT "Group_permissions_ma_Permission_right_id_8e777998_fk_Permissio" FOREIGN KEY ("Permission_right_id") REFERENCES "Permission" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "Group_permissions_many_Group_left_id_f39cabb2" ON "Group_permissions_many" ("Group_left_id");
CREATE INDEX "Group_permissions_many_Permission_right_id_8e777998" ON "Group_permissions_many" ("Permission_right_id");
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create model group_permissions_many
--
DROP TABLE "Group_permissions_many" CASCADE;
--
-- Create model permission
--
DROP TABLE "Permission" CASCADE;
--
-- Alter field settings on user
--
--
-- Alter field meta on user
--
--
-- Alter field avatar on user
--
--
-- Alter field newId on testsoftdeletedobjhistoryrecord
--
--
-- Alter field meta on testsoftdeletedobjhistoryrecord
--
--
-- Alter field updatedAt on testsoftdeletedobj
--
--
-- Alter field meta on testsoftdeletedobj
--
--
-- Alter field createdAt on testsoftdeletedobj
--
--
-- Alter field meta on testitemhistoryrecord
--
--
-- Alter field updatedAt on testitem
--
--
-- Alter field meta on testitem
--
--
-- Alter field createdAt on testitem
--
--
-- Alter field vir1 on testhistoryrecord
--
--
-- Alter field venue on testhistoryrecord
--
--
-- Alter field settings on testhistoryrecord
--
--
-- Alter field meta on testhistoryrecord
--
--
-- Alter field file on testhistoryrecord
--
--
-- Alter field venue on test
--
--
-- Alter field updatedAt on test
--
--
-- Alter field settings on test
--
--
-- Alter field meta on test
--
--
-- Alter field file on test
--
--
-- Alter field createdAt on test
--
--
-- Alter field avatar on organization
--
--
-- Create model schematype
--
DROP TABLE "SchemaType" CASCADE;
--
-- Create model group
--
DROP TABLE "Group" CASCADE;
COMMIT;

    `)
}
