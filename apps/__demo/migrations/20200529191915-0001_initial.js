// auto generated by kmigrator
// KMIGRATOR:0001_initial:

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create model test
--
CREATE TABLE "Test" ("id" serial NOT NULL PRIMARY KEY, "heroColor" text NULL, "isEnabled" boolean NOT NULL, "rating1" integer NULL, "rating2" numeric(8, 2) NULL, "rating3" numeric(18, 4) NULL, "venue" jsonb NULL, "status" varchar(50) NOT NULL, "uuid" uuid NOT NULL, "url" text NOT NULL, "slug" text NOT NULL UNIQUE, "self" integer NULL);
--
-- Create model user
--
CREATE TABLE "User" ("id" serial NOT NULL PRIMARY KEY, "name" text NULL, "email" text NULL UNIQUE, "isAdmin" boolean NOT NULL DEFAULT false, "isActive" boolean NOT NULL, "password" varchar(60) NULL, "avatar" jsonb NULL, "dob" date NULL, "rating" integer NULL, "settings" text NULL, "aboutMyself" text NULL, "updatedAt_utc" timestamp with time zone NULL, "updatedAt_offset" text NULL, "createdAt_utc" timestamp with time zone NULL, "createdAt_offset" text NULL, "createdBy" integer NULL, "updatedBy" integer NULL);
--
-- Create model todo
--
CREATE TABLE "Todo" ("id" serial NOT NULL PRIMARY KEY, "description" text NOT NULL, "isComplete" boolean NOT NULL, "deadline" date NOT NULL, "stars" integer NULL, "assignee" integer NULL);
--
-- Create model test_users_many
--
CREATE TABLE "Test_users_many" ("id" serial NOT NULL PRIMARY KEY, "Test_left_id" integer NOT NULL, "User_right_id" integer NOT NULL);
--
-- Create model forgotpasswordaction
--
CREATE TABLE "ForgotPasswordAction" ("id" serial NOT NULL PRIMARY KEY, "token" text NOT NULL UNIQUE, "requestedAt_utc" timestamp with time zone NOT NULL, "requestedAt_offset" text NOT NULL, "expiresAt_utc" timestamp with time zone NOT NULL, "expiresAt_offset" text NOT NULL, "usedAt_utc" timestamp with time zone NULL, "usedAt_offset" text NULL, "updatedAt_utc" timestamp with time zone NULL, "updatedAt_offset" text NULL, "createdAt_utc" timestamp with time zone NULL, "createdAt_offset" text NULL, "createdBy" integer NULL, "updatedBy" integer NULL, "user" integer NULL);
--
-- Create model contenttype_test_body
--
CREATE TABLE "_ContentType_Test_body" ("id" serial NOT NULL PRIMARY KEY, "document" text NULL, "from" integer NULL);
ALTER TABLE "Test" ADD CONSTRAINT "Test_self_d23d7ad7_fk_Test_id" FOREIGN KEY ("self") REFERENCES "Test" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "Test_slug_b8eaf23d_like" ON "Test" ("slug" text_pattern_ops);
CREATE INDEX "Test_self_d23d7ad7" ON "Test" ("self");
ALTER TABLE "User" ADD CONSTRAINT "User_createdBy_7f87595a_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "User" ADD CONSTRAINT "User_updatedBy_998aac8b_fk_User_id" FOREIGN KEY ("updatedBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "User_email_667201b5_like" ON "User" ("email" text_pattern_ops);
CREATE INDEX "User_createdBy_7f87595a" ON "User" ("createdBy");
CREATE INDEX "User_updatedBy_998aac8b" ON "User" ("updatedBy");
ALTER TABLE "Todo" ADD CONSTRAINT "Todo_assignee_c94c59ce_fk_User_id" FOREIGN KEY ("assignee") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "Todo_assignee_c94c59ce" ON "Todo" ("assignee");
ALTER TABLE "Test_users_many" ADD CONSTRAINT "Test_users_many_Test_left_id_f75fcc4b_fk_Test_id" FOREIGN KEY ("Test_left_id") REFERENCES "Test" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Test_users_many" ADD CONSTRAINT "Test_users_many_User_right_id_967e69d4_fk_User_id" FOREIGN KEY ("User_right_id") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "Test_users_many_Test_left_id_f75fcc4b" ON "Test_users_many" ("Test_left_id");
CREATE INDEX "Test_users_many_User_right_id_967e69d4" ON "Test_users_many" ("User_right_id");
ALTER TABLE "ForgotPasswordAction" ADD CONSTRAINT "ForgotPasswordAction_createdBy_c0278297_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ForgotPasswordAction" ADD CONSTRAINT "ForgotPasswordAction_updatedBy_60e6cb54_fk_User_id" FOREIGN KEY ("updatedBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ForgotPasswordAction" ADD CONSTRAINT "ForgotPasswordAction_user_3c52ec86_fk_User_id" FOREIGN KEY ("user") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "ForgotPasswordAction_token_9a0cc9b4_like" ON "ForgotPasswordAction" ("token" text_pattern_ops);
CREATE INDEX "ForgotPasswordAction_createdBy_c0278297" ON "ForgotPasswordAction" ("createdBy");
CREATE INDEX "ForgotPasswordAction_updatedBy_60e6cb54" ON "ForgotPasswordAction" ("updatedBy");
CREATE INDEX "ForgotPasswordAction_user_3c52ec86" ON "ForgotPasswordAction" ("user");
ALTER TABLE "_ContentType_Test_body" ADD CONSTRAINT "_ContentType_Test_body_from_db1ad4fe_fk_Test_id" FOREIGN KEY ("from") REFERENCES "Test" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "_ContentType_Test_body_from_db1ad4fe" ON "_ContentType_Test_body" ("from");
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create model contenttype_test_body
--
DROP TABLE "_ContentType_Test_body" CASCADE;
--
-- Create model forgotpasswordaction
--
DROP TABLE "ForgotPasswordAction" CASCADE;
--
-- Create model test_users_many
--
DROP TABLE "Test_users_many" CASCADE;
--
-- Create model todo
--
DROP TABLE "Todo" CASCADE;
--
-- Create model user
--
DROP TABLE "User" CASCADE;
--
-- Create model test
--
DROP TABLE "Test" CASCADE;
COMMIT;

    `)
}
